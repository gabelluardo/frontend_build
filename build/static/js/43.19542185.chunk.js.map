{"version":3,"sources":["views/Bike/Bike.js"],"names":["Bike","props","_this","Object","_home_gabriele_Documenti_team_marta_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_gabriele_Documenti_team_marta_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_gabriele_Documenti_team_marta_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","_isMounted","newSettings","showMessage","reloadStatus","recordVideo","showMessageVideo","toggleButton","onDismiss","state","visible","setState","visible_video","setTimeout","loading","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","settings","_this2","SocketIoHelper","getSettings","getState","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","xs","xl","CardState","reactstrap__WEBPACK_IMPORTED_MODULE_8__","color","isOpen","toggle","CardVideo","video","video_recording","dest","sendVideo","CardSetting","saveSettings","Component","_this3","handleSwitch","inputVideo","value","handleText","event","name","target","validity","valid","collapse","type","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","block","onClick","aria-expanded","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","action","encType","reactstrap__WEBPACK_IMPORTED_MODULE_15__","row","md","reactstrap__WEBPACK_IMPORTED_MODULE_16__","_coreui_react__WEBPACK_IMPORTED_MODULE_19__","variant","outline","label","defaultValue","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_17__","pattern","placeholder","reactstrap__WEBPACK_IMPORTED_MODULE_18__","data-dismiss","size","_this4","inputSettings","update","today","Date","date","getDate","getMonth","getHours","getMinutes","getSeconds","currentTime","undefined","JSON","parse","stringify","bind","defaultChecked","log","checked","csv","ant","min","potenza","led","circonferenza","calibration_value","onInput","run","video_record","_this5","status","updateStatus","jstate","jsettings","replace"],"mappings":"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","file":"static/js/43.19542185.chunk.js","sourcesContent":["import React, {\n  Component\n} from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Alert,\n  Collapse,\n} from \"reactstrap\";\nimport {\n  AppSwitch\n} from '@coreui/react'\nimport SocketIoHelper from \"../../helpers/socketHelper\";\n\nfunction currentTime() {\n  var today = new Date();\n\n  var date = today.getDate() + '/' + (today.getMonth() + 1);\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  var dateTime = time + '-' + date;\n\n  return dateTime\n}\n\nclass Bike extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: \"\",\n      state: \"\",\n      visible: false,\n      visible_video: false,\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.reloadStatus();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  reloadStatus() {\n    SocketIoHelper.getSettings(settings =>\n      this.setState({ settings })\n    )\n    SocketIoHelper.getState(state =>\n      this.setState({ state })\n    );\n  }\n\n  newSettings = () => {\n    this.showMessage();\n    this.reloadStatus();\n  };\n\n  recordVideo = () => {\n    this.showMessageVideo()\n    this.reloadStatus();\n  }\n\n  toggleButton = () => {\n    this.reloadStatus();\n  }\n\n  // funzioni per l'allert a schermo\n  onDismiss = () => {\n    if (this.state.visible) {\n      this.setState({\n        visible: false\n      });\n    }\n    else if (this.state.visible_video) {\n      this.setState({\n        visible_video: false\n      });\n    }\n  };\n\n  // NOTE: saranno deprecati col pacchetto di notifica\n  showMessage = () => {\n    this.setState({\n      visible: true\n    })\n    setTimeout(this.onDismiss, 2500);\n  };\n\n  showMessageVideo = () => {\n    this.setState({\n      visible_video: true\n    })\n    setTimeout(this.onDismiss, 2500);\n  };\n\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  );\n\n  render() {\n    if (this.state.state === \"\") {\n      return null\n    }\n    return (\n      <div className=\"animated fadeIn\" >\n        <Row>\n          <Col xs=\"12\" xl=\"4\">\n            <CardState\n              settings={this.state.settings}\n              state={this.state.state}\n              toggleButton={this.toggleButton}\n            />\n            <Alert color=\"warning\"\n              isOpen={this.state.visible}\n              toggle={this.onDismiss}>\n              Impostazioni salvate\n            </Alert>\n          </Col>\n\n          <Col xs=\"12\" xl=\"4\">\n            <CardVideo\n              video={this.state.state.video_recording}\n              dest={this.state.state.dest}\n              sendVideo={this.recordVideo}\n            />\n            <Alert color=\"warning\"\n              isOpen={this.state.visible_video}\n              toggle={this.onDismiss}>\n              Registrazione video\n            </Alert>\n          </Col>\n\n          <Col xs=\"12\" xl=\"4\">\n            <CardSetting\n              settings={this.state.settings}\n              saveSettings={this.newSettings}\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nclass CardVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.video,\n      collapse: false\n    }\n\n    this.inputVideo = {\n      \"dest\": this.props.dest,\n      \"type\": \"7\",\n      \"value\": \"\",\n      \"name\": \"\"\n    }\n  }\n\n  componentWillReceiveProps() {\n    this.setState({\n      value: this.props.video\n    });\n  }\n\n  handleSwitch = () => {\n    this.inputVideo.value = !this.inputVideo.value;\n  };\n\n  handleText = (event) => {\n    const name = event.target.value;\n\n    if (event.target.validity.valid) {\n      this.inputVideo.name = name;\n    }\n  };\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  sendVideo = () => {\n    SocketIoHelper.sendVideo(this.inputVideo);\n    this.props.sendVideo();\n  };\n\n  render() {\n    if (this.inputVideo.value === \"\") {\n      this.inputVideo.value = this.state.value;\n    }\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Video</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <Form action=\"\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n              <FormGroup row>\n                <Col md=\"10\">\n                  <Label>Registrazione</Label>\n                </Col>\n                <Col md=\"2\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    defaultValue={this.state.value}\n                    onChange={this.handleSwitch}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"5\">\n                  <Label>Name</Label>\n                </Col>\n                <Col md=\"7\">\n                  <Input className=\"text-center\" type=\"text\" pattern=\"*\"\n                    placeholder=\"Inserire nome del file video\"\n                    onChange={this.handleText} />\n                </Col>\n              </FormGroup>\n            </Form>\n          </CardBody>\n          <CardFooter>\n            <Row>\n              <Col md=\"9\">\n                <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"primary\" onClick={this.sendVideo}><i className=\"fa fa-sign-out\"></i> Send</Button>\n                &ensp;\n            </Col>\n            </Row>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nclass CardSetting extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: this.props.settings,\n      collapse: false\n    }\n\n    this.inputSettings = undefined;\n  }\n\n  handleSwitch = name => {\n    const settings = this.inputSettings;\n    const value = !settings[name];\n    settings[name] = value;\n  };\n\n  handleText = (name, event) => {\n    const settings = this.inputSettings;\n    const value = event.target.value;\n\n    if (event.target.validity.valid) {\n      settings[name] = value;\n    }\n  };\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  saveSettings = () => {\n    this.inputSettings.update = currentTime()\n    SocketIoHelper.saveSettings(this.inputSettings);\n    this.props.saveSettings();\n  }\n\n  render() {\n    if (this.inputSettings === undefined) {\n      this.inputSettings = JSON.parse(JSON.stringify(this.state.settings));\n    }\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Impostazioni</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <Form action=\"\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n              <FormGroup row>\n                <Col md=\"10\">\n                  <Label>Log</Label>\n                </Col>\n                <Col md=\"2\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    onChange={this.handleSwitch.bind(this, 'log')}\n                    defaultChecked={this.state.settings.log} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"10\">\n                  <Label>Csv</Label>\n                </Col>\n                <Col md=\"2\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    onChange={this.handleSwitch.bind(this, 'csv')}\n                    checked={this.state.settings.csv} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"10\">\n                  <Label>Ant</Label>\n                </Col>\n                <Col md=\"2\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    onChange={this.handleSwitch.bind(this, 'ant')}\n                    defaultChecked={this.state.settings.ant} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Potenza media</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"\"\n                    defaultValue={this.state.settings.potenza}\n                    onChange={this.handleText.bind(this, 'potenza')} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Led Mode</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.state.settings.led}\n                    onChange={this.handleText.bind(this, 'led')} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Circonferenza</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.state.settings.circonferenza}\n                    onChange={this.handleText.bind(this, 'circonferenza')} />\n                </Col>\n              </FormGroup>\n\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Valore calibrazione</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.state.settings.calibration_value}\n                    onInput={this.handleText.bind(this, 'calibration_value')} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Run</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.state.settings.run}\n                    onInput={this.handleText.bind(this, 'run')} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"10\">\n                  <Label>Record video</Label>\n                </Col>\n                <Col md=\"2\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    onChange={this.handleSwitch.bind(this, 'video_record')}\n                    defaultChecked={this.state.settings.video_record}\n                  />\n                </Col>\n              </FormGroup>\n            </Form>\n          </CardBody>\n\n          <CardFooter>\n            <Row>\n              <Col md=\"9\">\n                <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"success\" onClick={this.saveSettings}><i className=\"fa fa-download\"></i> Save</Button>\n                &ensp;\n                  </Col>\n              <Col md=\"3\">\n                <div className=\"text-center\">{this.state.settings.update}</div>\n              </Col>\n            </Row>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nclass CardState extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: \"\",\n      collapse: false,\n    };\n  }\n\n  componentWillReceiveProps() {\n    this.updateStatus();\n  }\n\n  componentDidMount() {\n    this.updateStatus();\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  updateStatus() {\n    let jstate = JSON.parse(JSON.stringify(this.props.state));\n    let jsettings = JSON.parse(JSON.stringify(this.props.settings));\n\n    // rimuovo i campi superflui dall'output\n    delete jstate[\"dest\"];\n    delete jstate[\"type\"];\n    delete jsettings[\"dest\"];\n    delete jsettings[\"type\"];\n\n    let state = JSON.stringify(jstate, null, 1).replace(/\\{|\\}|\"|,|/g, \"\").replace(\"\\n\", \"\");\n    let settings = JSON.stringify(jsettings, null, 1).replace(/\\{|\\}|\"|,/g, \"\");\n\n    this.setState({\n      status: state + settings\n    });\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Status</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody >\n            <pre>\n              <code>\n                {this.state.status}\n              </code>\n            </pre>\n          </CardBody>\n          <CardFooter>\n            <Button type=\"submit\" size=\"sl\" color=\"danger\" onClick={this.props.toggleButton}><i className=\"fa fa-refresh\"></i> Reload</Button>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nexport default Bike;\n\n\n\n// NOTE: Il cambio va bene con l'app bluetooth android\n// class CardGear extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       calibration: \"\",\n//       collapse: false\n//     }\n\n//     this.inputCalibration = undefined;\n//   }\n\n//   toggle = () => {\n//     this.setState({ collapse: !this.state.collapse });\n//   };\n\n//   sendCalibration = () => {\n//     SocketIoHelper.sendCalibration(this.inputCalibration);\n//     this.props.sendCalibration();\n//   };\n\n//   render() {\n//     return (\n//       <Card>\n//         <CardHeader>\n//           <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n//             <strong>Cambio</strong>\n//           </Button>\n//         </CardHeader>\n//         <Collapse isOpen={!this.state.collapse}>\n//           <CardBody>\n//             robe\n//           </CardBody>\n//           <CardFooter>\n//             <Row>\n//               <Col md=\"9\">\n//                 <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"primary\" onClick={this.sendCalibration}><i className=\"fa fa-sign-out\"></i> Send</Button>\n//                 &ensp;\n//               </Col>\n//             </Row>\n//           </CardFooter>\n//         </Collapse>\n//       </Card>\n//     );\n//   }\n// }\n"],"sourceRoot":""}