{"version":3,"sources":["notifications/notification.js","views/Bike/Bike.js"],"names":["base","type","insert","container","animationIn","animationOut","width","dismiss","duration","onScreen","pauseOnHover","showIcon","Bike","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","updateView","reloadStatus","loading","react_default","a","createElement","className","state","settings","visible","visible_video","visible_rasp","_this2","SocketIoHelper","getSettings","JSON","stringify","setState","getState","Row","Col","xs","xl","Bike_CardState","Bike_CardVideo","value","video_recording","dest","Bike_CardRasp","Bike_CardSetting","Component","CardVideo","_this3","handleSwitch","inputVideo","handleText","event","name","target","validity","valid","toggle","collapse","sendVideo","store","addNotification","objectSpread","title","message","Card","CardHeader","Button","block","color","onClick","aria-expanded","Collapse","isOpen","CardBody","Form","action","encType","FormGroup","row","md","Label","es","variant","outline","label","checked","onChange","Input","pattern","placeholder","CardFooter","data-dismiss","size","CardSetting","_this4","inputSettings","saveSettings","update","today","Date","date","getDate","getMonth","slice","getHours","getMinutes","getSeconds","currentTime","parse","bind","log","csv","ant","min","defaultValue","potenza","led","circonferenza","calibration_value","onInput","run","replace","CardState","_this5","toggleButton","status","updateStatus","jstate","jsettings","CardRasp","_this6","sendRasp","inputRasp"],"mappings":"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","file":"static/js/43.33a6c895.chunk.js","sourcesContent":["import \"react-notifications-component/dist/theme.css\"\nimport \"animate.css\"\n\n// Notifiche\nconst base = {\n    type: \"info\",\n    insert: \"top\",\n    container: \"top-right\",\n    animationIn: [\"animated\", \"fadeIn\"],\n    animationOut: [\"animated\", \"fadeOut\"],\n    width: 300,\n    dismiss: {\n        duration: 2500,\n        onScreen: true,  // true: mostra il countdown di scomparsa\n        pauseOnHover: true,\n        showIcon: true\n    }\n}\n\nexport default base;\n","import React, {\n  Component\n} from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Collapse,\n} from \"reactstrap\";\nimport {\n  AppSwitch\n} from '@coreui/react'\nimport SocketIoHelper from \"../../helpers/socketHelper\";\nimport { store } from 'react-notifications-component';\nimport base from '../../notifications/notification';\n\nfunction currentTime() {\n  var today = new Date();\n  var date = today.getDate() + '-' + (\"0\" + (today.getMonth() + 1)).slice(-2);\n  var time = (\"0\" + (today.getHours() + 1)).slice(-2) + \":\" + (\"0\" + (today.getMinutes() + 1)).slice(-2) + \":\" + (\"0\" + (today.getSeconds() + 1)).slice(-2);\n  var dateTime = time + '_' + date;\n\n  return dateTime\n}\n\nclass Bike extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: \"\",\n      state: \"\",\n      visible: false,\n      visible_video: false,\n      visible_rasp: false,\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.reloadStatus();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  reloadStatus() {\n    SocketIoHelper.getSettings(settings => {\n      if (JSON.stringify(this.state.settings) !== JSON.stringify(settings)) {\n        this.setState({ settings });\n      }\n    });\n    SocketIoHelper.getState(state => {\n      this.setState({ state })\n    });\n  }\n\n  updateView = () => {\n    this.reloadStatus();\n  }\n\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  );\n\n  render() {\n    if (this.state.state === \"\" || this.state.settings === \"\") {\n      return null\n    }\n    return (\n      <div className=\"animated fadeIn\" >\n        <Row>\n          <Col xs=\"12\" xl=\"4\">\n            <CardState\n              settings={this.state.settings}\n              state={this.state.state}\n              reloadStatus={this.updateView}\n            />\n          </Col>\n\n          <Col xs=\"12\" xl=\"4\">\n            <CardVideo\n              value={this.state.state.video_recording}\n              dest={this.state.state.dest}\n              reloadStatus={this.updateView}\n            />\n            <CardRasp\n              dest={this.state.state.dest}\n              reloadStatus={this.updateView}\n            />\n          </Col>\n\n          <Col xs=\"12\" xl=\"4\">\n            <CardSetting\n              settings={this.state.settings}\n              reloadStatus={this.updateView}\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nclass CardVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapse: false\n    }\n\n    this.inputVideo = {\n      \"dest\": this.props.dest,\n      \"type\": \"7\",\n      \"value\": this.props.value,\n      \"name\": \"\"\n    }\n  }\n\n  handleSwitch = () => {\n    this.inputVideo.value = !this.inputVideo.value;\n  };\n\n  handleText = (event) => {\n    const name = event.target.value;\n    if (event.target.validity.valid) {\n      this.inputVideo.name = name;\n    }\n  };\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  sendVideo = () => {\n    store.addNotification({\n      title: \"Video\",\n      message: \"Invio del pacchetto video alla bici\",\n      ...base,\n    });\n    SocketIoHelper.sendVideo(this.inputVideo);\n    this.props.reloadStatus();\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Video</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <Form action=\"\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Registrazione</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    checked={this.props.value}\n                    onChange={this.handleSwitch}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"5\">\n                  <Label>File</Label>\n                </Col>\n                <Col md=\"7\">\n                  <Input className=\"text-center\" type=\"text\" pattern=\"*\"\n                    placeholder=\"Inserire nome del file video\"\n                    onChange={this.handleText} />\n                </Col>\n              </FormGroup>\n            </Form>\n          </CardBody>\n          <CardFooter>\n            <Row>\n              <Col md=\"9\">\n                <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"primary\" onClick={this.sendVideo}><i className=\"fa fa-sign-out\"></i> Send</Button>\n                &ensp;\n            </Col>\n            </Row>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nclass CardSetting extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapse: false\n    }\n\n    this.inputSettings = JSON.parse(JSON.stringify(this.props.settings));;\n  }\n\n  handleSwitch = name => {\n    const settings = this.inputSettings;\n    const value = !settings[name];\n    settings[name] = value;\n  };\n\n  handleText = (name, event) => {\n    const settings = this.inputSettings;\n    const value = event.target.value;\n\n    if (event.target.validity.valid) {\n      settings[name] = value;\n    }\n  };\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  saveSettings = () => {\n    store.addNotification({\n      title: \"Settings\",\n      message: \"Invio del pacchetto settings alla bici\",\n      ...base,\n    });\n    this.inputSettings.update = currentTime()\n    SocketIoHelper.saveSettings(this.inputSettings);\n    this.props.reloadStatus();\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Impostazioni</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <Form action=\"\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Log</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    onChange={this.handleSwitch.bind(this, 'log')}\n                    checked={this.props.settings.log} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Csv</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    onChange={this.handleSwitch.bind(this, 'csv')}\n                    checked={this.props.settings.csv} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Ant</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    onChange={this.handleSwitch.bind(this, 'ant')}\n                    checked={this.props.settings.ant} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Potenza media</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"\"\n                    defaultValue={this.props.settings.potenza}\n                    onChange={this.handleText.bind(this, 'potenza')} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Led Mode</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.led}\n                    onChange={this.handleText.bind(this, 'led')} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Circonferenza</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.circonferenza}\n                    onChange={this.handleText.bind(this, 'circonferenza')} />\n                </Col>\n              </FormGroup>\n\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Valore calibrazione</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.calibration_value}\n                    onInput={this.handleText.bind(this, 'calibration_value')} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Run</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.run}\n                    onInput={this.handleText.bind(this, 'run')} />\n                </Col>\n              </FormGroup>\n            </Form>\n          </CardBody>\n\n          <CardFooter>\n            <Row>\n              <Col md=\"9\">\n                <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"success\" onClick={this.saveSettings}><i className=\"fa fa-download\"></i> Save</Button>\n                &ensp;\n                  </Col>\n              <Col md=\"3\">\n                <div className=\"text-center\">{this.props.settings.update.replace(\"_\", \"\\n\")}</div>\n              </Col>\n            </Row>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nclass CardState extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: \"\",\n      collapse: false,\n    };\n  }\n\n  // TODO: issue #22\n  UNSAFE_componentWillReceiveProps() {\n    this.updateStatus();\n  }\n\n  componentDidMount() {\n    this.updateStatus();\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  toggleButton = () => {\n    store.addNotification({\n      ...base,\n      title: \"State\",\n      message: \"Aggiornato lo status\",\n      type: \"success\"\n    });\n    this.props.reloadStatus()\n  };\n\n  updateStatus() {\n    let jstate = JSON.parse(JSON.stringify(this.props.state));\n    let jsettings = JSON.parse(JSON.stringify(this.props.settings));\n\n    // rimuovo i campi superflui dall'output\n    delete jstate[\"dest\"];\n    delete jstate[\"type\"];\n    delete jsettings[\"dest\"];\n    delete jsettings[\"type\"];\n\n    let state = JSON.stringify(jstate, null, 1).replace(/\\{|\\}|\"|,|/g, \"\").replace(\"\\n\", \"\");\n    let settings = JSON.stringify(jsettings, null, 1).replace(/\\{|\\}|\"|,/g, \"\");\n\n    this.setState({\n      status: state + settings\n    });\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Status</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody >\n            <pre>\n              <code>\n                {this.state.status}\n              </code>\n            </pre>\n          </CardBody>\n          <CardFooter>\n            <Button className=\"text-white bg-cyan\" type=\"submit\" size=\"sl\" onClick={this.toggleButton}><i className=\"fa fa-refresh\"></i> Reload</Button>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nclass CardRasp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapse: false\n    };\n\n    this.inputRasp = {\n      dest: this.props.dest,\n      type: \"6\",\n      value: \"\"\n    }\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  sendRasp = value => {\n    store.addNotification({\n      title: \"Raspberry\",\n      message: \"Invio del pacchetto raspberry alla bici\",\n      ...base,\n    });\n    this.inputRasp.value = value;\n    SocketIoHelper.sendRasp(this.inputRasp);\n    this.props.reloadStatus();\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Raspberry</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <Row>\n              <Col xs=\"6\" md=\"8\" >\n                <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"danger\" onClick={this.sendRasp.bind(this, '0')}>\n                  <i className=\"fa fa-power-off\"></i> Spegni\n              </Button>\n              </Col>\n              <Col xs=\"6\" md=\"4\">\n                &ensp;&ensp;&ensp;\n                <Button className=\"text-white\" type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"warning\" onClick={this.sendRasp.bind(this, '1')}>\n                  <i className=\"fa fa-refresh\"></i> Riavvia\n              </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nexport default Bike;\n\n\n\n// NOTE: Il cambio va bene con l'app bluetooth android\n// class CardGear extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       calibration: \"\",\n//       collapse: false\n//     }\n\n//     this.inputCalibration = undefined;\n//   }\n\n//   toggle = () => {\n//     this.setState({ collapse: !this.state.collapse });\n//   };\n\n//   sendCalibration = () => {\n//     SocketIoHelper.sendCalibration(this.inputCalibration);\n//     this.props.sendCalibration();\n//   };\n\n//   render() {\n//     return (\n//       <Card>\n//         <CardHeader>\n//           <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n//             <strong>Cambio</strong>\n//           </Button>\n//         </CardHeader>\n//         <Collapse isOpen={!this.state.collapse}>\n//           <CardBody>\n//             robe\n//           </CardBody>\n//           <CardFooter>\n//             <Row>\n//               <Col md=\"9\">\n//                 <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"primary\" onClick={this.sendCalibration}><i className=\"fa fa-sign-out\"></i> Send</Button>\n//                 &ensp;\n//               </Col>\n//             </Row>\n//           </CardFooter>\n//         </Collapse>\n//       </Card>\n//     );\n//   }\n// }\n"],"sourceRoot":""}