{"version":3,"sources":["notifications/index.js","views/Bike/Cards/CardState.js","views/Bike/Cards/CardVideo.js","views/Bike/Cards/CardRasp.js","views/Bike/Cards/CardSettings.js","views/Bike/Bike.js"],"names":["base","type","insert","container","animationIn","animationOut","width","dismiss","duration","onScreen","pauseOnHover","showIcon","CardState","state","settings","reloadStatus","useState","collapse","setCollapse","status","setStatus","toggleCollapse","useCallback","useEffect","updateStatus","toggleButton","store","addNotification","title","message","jstate","jsettings","bstate","JSON","stringify","replace","bsettings","Card","CardHeader","Button","block","color","className","onClick","aria-expanded","Collapse","isOpen","CardBody","CardFooter","size","CardVideo","dest","value","inputVideo","useRef","name","handleSwitch","current","handleText","event","target","validity","valid","sendVideo","SocketIoHelper","Form","action","encType","FormGroup","row","Col","md","Label","variant","outline","label","checked","onChange","bind","Input","pattern","placeholder","Row","data-dismiss","CardRasp","inputRasp","sendRasp","xs","xl","CardSettings","inputSettings","saveSettings","update","d","Date","toLocaleTimeString","toLocaleDateString","month","day","currentTime","log","csv","ant","min","defaultValue","potenza","led","circonferenza","calibration_value","onInput","run","Bike","setState","setSettings","loading","undefined","getSettings","newSettings","getState","updateView","video_recording"],"mappings":"+NAmBeA,G,cAfF,CACXC,KAAM,OACNC,OAAQ,MACRC,UAAW,YACXC,YAAa,CAAC,WAAY,UAC1BC,aAAc,CAAC,WAAY,WAC3BC,MAAO,IACPC,QAAS,CACPC,SAAU,KACVC,UAAU,EACVC,cAAc,EACdC,UAAU,KCyECC,EA5EG,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAAmB,EACvBC,oBAAS,GADc,mBAChDC,EADgD,KACtCC,EADsC,OAE3BF,qBAF2B,mBAEhDG,EAFgD,KAExCC,EAFwC,KAIjDC,EAAiBC,uBAAY,WACjCJ,GAAaD,KACZ,CAACA,IAEJM,qBAAU,WACRC,MAEC,CAACX,EAAOC,IAEX,IAAMW,EAAeH,uBAAY,WAC/BI,QAAMC,gBAAN,2BACK3B,GADL,IAEE4B,MAAO,QACPC,QAAS,uBACT5B,KAAM,aAERc,MAEC,IAEGS,EAAeF,uBAAY,WAC/B,IAAIQ,EAAM,eAAQjB,GACdkB,EAAS,eAAQjB,UAGdgB,EAAM,YACNA,EAAM,YACNC,EAAS,YACTA,EAAS,KAEhB,IAAIC,EAASC,KAAKC,UAAUJ,EAAQ,KAAM,GACvCK,QAAQ,cAAe,IACvBA,QAAQ,KAAM,IACbC,EAAYH,KAAKC,UAAUH,EAAW,KAAM,GAAGI,QAAQ,aAAc,IAEzEf,EAAU,GAAD,OAAIY,GAAJ,OAAaI,MACrB,CAACvB,EAAOC,IAEX,OACE,wBAACuB,EAAA,EAAD,KACE,wBAACC,EAAA,EAAD,KACE,wBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,MAAM,OACNC,UAAU,oBACVC,QAAStB,EACTuB,gBAAe3B,GAEf,kDAGJ,wBAAC4B,EAAA,EAAD,CAAUC,QAAS7B,GACjB,wBAAC8B,EAAA,EAAD,KACE,mCACE,oCAAO5B,KAGX,wBAAC6B,EAAA,EAAD,KACE,wBAACT,EAAA,EAAD,CACEG,UAAU,qBACVzC,KAAK,SACLgD,KAAK,KACLN,QAASlB,GAET,6BAAGiB,UAAU,kBANf,e,6CC2DKQ,EAhHG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOrC,EAAmB,EAAnBA,aAAmB,EACnBC,oBAAS,GADU,mBAC5CC,EAD4C,KAClCC,EADkC,KAE7CmC,EAAaC,iBAAO,CAAEH,KAAMA,EAAMlD,KAAM,IAAKmD,MAAOA,EAAOG,KAAM,KAOjElC,EAAiBC,uBAAY,WACjCJ,GAAaD,KACZ,CAACA,IAEEuC,EAAelC,uBAAY,WAC/B+B,EAAWI,QAAQL,OAASC,EAAWI,QAAQL,QAC9C,CAACC,IAEEK,EAAapC,uBACjB,SAAAqC,GACE,IAAIJ,EAAOI,EAAMC,OAAOR,MACpBO,EAAMC,OAAOC,SAASC,QACxBT,EAAWI,QAAQF,KAAOA,KAG9B,CAACF,IAGGU,EAAYzC,uBAAY,WAC5B0C,IAAeD,UAAUV,EAAWI,SACpC/B,QAAMC,gBAAN,aACEC,MAAO,QACPC,QAAS,uCACN7B,IAGLe,MAEC,CAACsC,IAEJ,OACE,wBAAChB,EAAA,EAAD,KACE,wBAACC,EAAA,EAAD,KACE,wBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,MAAM,OACNC,UAAU,oBACVC,QAAStB,EACTuB,gBAAe3B,GAEf,iDAGJ,wBAAC4B,EAAA,EAAD,CAAUC,QAAS7B,GACjB,wBAAC8B,EAAA,EAAD,KACE,wBAACkB,EAAA,EAAD,CACEC,OAAO,GACPC,QAAQ,sBACRzB,UAAU,mBAEV,wBAAC0B,EAAA,EAAD,CAAWC,KAAG,GACZ,wBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACC,EAAA,EAAD,uBAEF,wBAACF,EAAA,EAAD,CAAKC,GAAG,KACN,wBAAC,IAAD,CACE7B,UAAW,OACX+B,QAAS,OACThC,MAAO,UACPiC,QAAS,MACTC,OAAK,EACLC,QAASxB,EACTyB,SAAUrB,EAAasB,U,OAI7B,wBAACV,EAAA,EAAD,CAAWC,KAAG,GACZ,wBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACC,EAAA,EAAD,cAEF,wBAACF,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACQ,EAAA,EAAD,CACErC,UAAU,cACVzC,KAAK,OACL+E,QAAQ,IACRC,YAAY,+BACZJ,SAAUnB,QAMpB,wBAACV,EAAA,EAAD,KACE,wBAACkC,EAAA,EAAD,KACE,wBAACZ,EAAA,EAAD,CAAKC,GAAG,KACN,wBAAChC,EAAA,EAAD,CACEtC,KAAK,SACLkF,eAAa,QACblC,KAAK,KACLR,MAAM,UACNE,QAASoB,GAET,6BAAGrB,UAAU,mBAPf,SADF,eC7BG0C,EAvEE,SAAC,GAA4B,IAA1BjC,EAAyB,EAAzBA,KAAMpC,EAAmB,EAAnBA,aAAmB,EACXC,oBAAS,GADE,mBACpCC,EADoC,KAC1BC,EAD0B,KAErCmE,EAAY/B,iBAAO,CAAEH,KAAMA,EAAMlD,KAAM,IAAKmD,MAAO,KAEnD/B,EAAiBC,uBAAY,WACjCJ,GAAaD,KACZ,CAACA,IAEEqE,EAAWhE,uBACf,SAAA8B,GACEiC,EAAU5B,QAAQL,MAAQA,EAC1BY,IAAesB,SAASD,EAAU5B,SAElC/B,QAAMC,gBAAN,aACEC,MAAO,YACPC,QAAS,2CACN7B,IAGLe,MAGF,CAACsE,IAGH,OACE,wBAAChD,EAAA,EAAD,KACE,wBAACC,EAAA,EAAD,KACE,wBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,MAAM,OACNC,UAAU,oBACVC,QAAStB,EACTuB,gBAAe3B,GAEf,qDAGJ,wBAAC4B,EAAA,EAAD,CAAUC,QAAS7B,GACjB,wBAAC8B,EAAA,EAAD,KACE,wBAACmC,EAAA,EAAD,KACE,wBAACZ,EAAA,EAAD,CAAKiB,GAAG,IAAIhB,GAAG,IAAIiB,GAAG,KACpB,wBAACjD,EAAA,EAAD,CACEtC,KAAK,SACLkF,eAAa,QACblC,KAAK,KACLR,MAAM,SACNE,QAAS,kBAAM2C,EAAS,OAExB,6BAAG5C,UAAU,oBAPf,YAUF,wBAAC4B,EAAA,EAAD,CAAKiB,GAAG,IAAIhB,GAAG,IAAIiB,GAAG,KACpB,wBAACjD,EAAA,EAAD,CACEG,UAAU,aACVzC,KAAK,SACLkF,eAAa,QACblC,KAAK,KACLR,MAAM,UACNE,QAAS,kBAAM2C,EAAS,OAExB,6BAAG5C,UAAU,kBARf,kBC4LC+C,EA9NM,SAAC,GAAgC,IAA9B3E,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAAmB,EACnBC,oBAAS,GADU,mBAC5CC,EAD4C,KAClCC,EADkC,KAE7CwE,EAAgBpC,iBAAOxC,GAE7BS,qBAAU,WACRmE,EAAcjC,QAAU3C,IACvB,CAACA,IAEJ,IAAMO,EAAiBC,uBAAY,WACjCJ,GAAaD,KACZ,CAACA,IAEEuC,EAAelC,uBACnB,SAAAiC,GACE,IAAIzC,EAAW4E,EAAcjC,QACzBL,GAAStC,EAASyC,GACtBzC,EAASyC,GAAQH,IAEnB,CAACsC,IAGGhC,EAAapC,uBACjB,SAACiC,EAAMI,GACL,IAAI7C,EAAW4E,EAAcjC,QACzBL,EAAQO,EAAMC,OAAOR,MAErBO,EAAMC,OAAOC,SAASC,QACxBhD,EAASyC,GAAQH,KAGrB,CAACsC,IAGGC,EAAerE,uBAAY,WAC/B,IAAIR,EAAW4E,EAAcjC,QAE7B3C,EAAS8E,OAhDO,WAClB,IAAMC,EAAI,IAAIC,KACd,OACED,EAAEE,qBACF,IACAF,EAAEG,mBAAmB,QAAS,CAC5BC,MAAO,UACPC,IAAK,aAEP/D,QAAQ,IAAK,KAuCKgE,GAClBnC,IAAe2B,aAAa7E,GAE5BY,QAAMC,gBAAN,aACEC,MAAO,WACPC,QAAS,0CACN7B,IAGLe,MAEC,CAAC2E,IAEJ,OACE,wBAACrD,EAAA,EAAD,KACE,wBAACC,EAAA,EAAD,KACE,wBAACC,EAAA,EAAD,CACEC,OAAK,EACLC,MAAM,OACNC,UAAU,oBACVC,QAAStB,EACTuB,gBAAe3B,GAEf,wDAGJ,wBAAC4B,EAAA,EAAD,CAAUC,QAAS7B,GACjB,wBAAC8B,EAAA,EAAD,KACE,wBAACkB,EAAA,EAAD,CACEC,OAAO,GACPC,QAAQ,sBACRzB,UAAU,mBAEV,wBAAC0B,EAAA,EAAD,CAAWC,KAAG,GACZ,wBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACC,EAAA,EAAD,aAEF,wBAACF,EAAA,EAAD,CAAKC,GAAG,KACN,wBAAC,IAAD,CACE7B,UAAW,OACX+B,QAAS,OACThC,MAAO,UACPiC,QAAS,MACTC,OAAK,EACLE,SAAUrB,EAAasB,U,EAAW,OAClCF,QAASc,EAAcjC,QAAQ2C,QAIrC,wBAAChC,EAAA,EAAD,CAAWC,KAAG,GACZ,wBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACC,EAAA,EAAD,aAEF,wBAACF,EAAA,EAAD,CAAKC,GAAG,KACN,wBAAC,IAAD,CACE7B,UAAW,OACX+B,QAAS,OACThC,MAAO,UACPiC,QAAS,MACTC,OAAK,EACLE,SAAUrB,EAAasB,U,EAAW,OAClCF,QAASc,EAAcjC,QAAQ4C,QAIrC,wBAACjC,EAAA,EAAD,CAAWC,KAAG,GACZ,wBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACC,EAAA,EAAD,aAEF,wBAACF,EAAA,EAAD,CAAKC,GAAG,KACN,wBAAC,IAAD,CACE7B,UAAW,OACX+B,QAAS,OACThC,MAAO,UACPiC,QAAS,MACTC,OAAK,EACLE,SAAUrB,EAAasB,U,EAAW,OAClCF,QAASc,EAAcjC,QAAQ6C,QAIrC,wBAAClC,EAAA,EAAD,CAAWC,KAAG,GACZ,wBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACC,EAAA,EAAD,uBAEF,wBAACF,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACQ,EAAA,EAAD,CACErC,UAAU,cACVzC,KAAK,SACLsG,IAAI,IACJvB,QAAQ,GACRwB,aAAc1F,EAAS2F,QACvB5B,SAAUnB,EAAWoB,U,EAAW,eAItC,wBAACV,EAAA,EAAD,CAAWC,KAAG,GACZ,wBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACC,EAAA,EAAD,kBAEF,wBAACF,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACQ,EAAA,EAAD,CACErC,UAAU,cACVzC,KAAK,SACLsG,IAAI,IACJvB,QAAQ,SACRwB,aAAcd,EAAcjC,QAAQiD,IACpC7B,SAAUnB,EAAWoB,U,EAAW,WAItC,wBAACV,EAAA,EAAD,CAAWC,KAAG,GACZ,wBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACC,EAAA,EAAD,uBAEF,wBAACF,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACQ,EAAA,EAAD,CACErC,UAAU,cACVzC,KAAK,SACLsG,IAAI,IACJvB,QAAQ,SACRwB,aAAcd,EAAcjC,QAAQkD,cACpC9B,SAAUnB,EAAWoB,U,EAAW,qBAKtC,wBAACV,EAAA,EAAD,CAAWC,KAAG,GACZ,wBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACC,EAAA,EAAD,6BAEF,wBAACF,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACQ,EAAA,EAAD,CACErC,UAAU,cACVzC,KAAK,SACLsG,IAAI,IACJvB,QAAQ,SACRwB,aAAcd,EAAcjC,QAAQmD,kBACpCC,QAASnD,EAAWoB,U,EAAW,yBAIrC,wBAACV,EAAA,EAAD,CAAWC,KAAG,GACZ,wBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACC,EAAA,EAAD,aAEF,wBAACF,EAAA,EAAD,CAAKC,GAAG,KACN,wBAACQ,EAAA,EAAD,CACErC,UAAU,cACVzC,KAAK,SACLsG,IAAI,IACJvB,QAAQ,SACRwB,aAAcd,EAAcjC,QAAQqD,IACpCD,QAASnD,EAAWoB,U,EAAW,aAOzC,wBAAC9B,EAAA,EAAD,KACE,wBAACkC,EAAA,EAAD,KACE,wBAACZ,EAAA,EAAD,CAAKiB,GAAG,IAAIhB,GAAG,KACb,wBAAChC,EAAA,EAAD,CACEtC,KAAK,SACLkF,eAAa,QACblC,KAAK,KACLR,MAAM,UACNE,QAASgD,GAET,6BAAGjD,UAAU,mBAPf,SADF,UAYA,wBAAC4B,EAAA,EAAD,CAAKiB,GAAG,IAAIhB,GAAG,KACb,+BAAK7B,UAAU,eACZ5B,EAAS8E,OAAOzD,QAAQ,IAAK,aCrL/B4E,UA3DF,WAAO,IAAD,EACS/F,qBADT,mBACVH,EADU,KACHmG,EADG,OAEehG,qBAFf,mBAEVF,EAFU,KAEAmG,EAFA,KAGXC,OAAoBC,IAAVtG,QAAoCsG,IAAbrG,EAEvCS,qBAAU,WACRR,MAEC,IAEH,IAAMA,EAAeO,uBAAY,WAC/B0C,IAAeoD,aAAY,SAAAC,GACrBpF,KAAKC,UAAUmF,KAAiBpF,KAAKC,UAAUpB,IACjDmG,EAAYI,MAGhBrD,IAAesD,UAAS,SAAAzG,GAAK,OAAImG,EAASnG,QAEzC,IAEG0G,EAAajG,uBAAY,WAC7BP,MACC,CAACA,IAOJ,OAAOmG,EAJS,kBACd,+BAAKxE,UAAU,oCAAf,eAMA,uCACE,wBAACwC,EAAA,EAAD,KACE,wBAACZ,EAAA,EAAD,CAAKiB,GAAG,KAAKC,GAAG,KACd,wBAAC,EAAD,CACE1E,SAAUA,EACVD,MAAOA,EACPE,aAAcwG,KAIlB,wBAACjD,EAAA,EAAD,CAAKiB,GAAG,KAAKC,GAAG,KACd,wBAAC,EAAD,CACEpC,MAAOvC,EAAM2G,gBACbrE,KAAMtC,EAAMsC,KACZpC,aAAcwG,IAEhB,wBAAC,EAAD,CAAUpE,KAAMtC,EAAMsC,KAAMpC,aAAcwG,KAG5C,wBAACjD,EAAA,EAAD,CAAKiB,GAAG,KAAKC,GAAG,KACd,wBAAC,EAAD,CAAc1E,SAAUA,EAAUC,aAAcwG","file":"static/js/11.f774ab7b.chunk.js","sourcesContent":["import 'react-notifications-component/dist/theme.css'\nimport 'animate.css'\n\n// Notifiche\nconst base = {\n  type: 'info',\n  insert: 'top',\n  container: 'top-right',\n  animationIn: ['animated', 'fadeIn'],\n  animationOut: ['animated', 'fadeOut'],\n  width: 300,\n  dismiss: {\n    duration: 2500,\n    onScreen: true, // true: mostra il countdown di scomparsa\n    pauseOnHover: true,\n    showIcon: true,\n  },\n}\n\nexport default base\n","import React, { useEffect, useState, useCallback } from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Collapse,\n} from 'reactstrap'\nimport { store } from 'react-notifications-component'\nimport base from 'notifications'\n\nconst CardState = ({ state, settings, reloadStatus }) => {\n  const [collapse, setCollapse] = useState(false)\n  const [status, setStatus] = useState()\n\n  const toggleCollapse = useCallback(() => {\n    setCollapse(!collapse)\n  }, [collapse])\n\n  useEffect(() => {\n    updateStatus()\n    // eslint-disable-next-line\n  }, [state, settings])\n\n  const toggleButton = useCallback(() => {\n    store.addNotification({\n      ...base,\n      title: 'State',\n      message: 'Aggiornato lo status',\n      type: 'success',\n    })\n    reloadStatus()\n    // eslint-disable-next-line\n  }, [])\n\n  const updateStatus = useCallback(() => {\n    let jstate = { ...state }\n    let jsettings = { ...settings }\n\n    // rimuovo i campi superflui dall'output\n    delete jstate['dest']\n    delete jstate['type']\n    delete jsettings['dest']\n    delete jsettings['type']\n\n    let bstate = JSON.stringify(jstate, null, 1)\n      .replace(/\\{|\\}|\"|,|/g, '')\n      .replace('\\n', '')\n    let bsettings = JSON.stringify(jsettings, null, 1).replace(/\\{|\\}|\"|,/g, '')\n\n    setStatus(`${bstate}${bsettings}`)\n  }, [state, settings])\n\n  return (\n    <Card>\n      <CardHeader>\n        <Button\n          block\n          color=\"link\"\n          className=\"text-left m-0 p-0\"\n          onClick={toggleCollapse}\n          aria-expanded={collapse}\n        >\n          <strong>Status</strong>\n        </Button>\n      </CardHeader>\n      <Collapse isOpen={!collapse}>\n        <CardBody>\n          <pre>\n            <code>{status}</code>\n          </pre>\n        </CardBody>\n        <CardFooter>\n          <Button\n            className=\"text-white bg-cyan\"\n            type=\"submit\"\n            size=\"sl\"\n            onClick={toggleButton}\n          >\n            <i className=\"fa fa-refresh\"></i> Reload\n          </Button>\n        </CardFooter>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardState\n","import React, { useRef, useState, useCallback } from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Collapse,\n} from 'reactstrap'\nimport { AppSwitch } from '@coreui/react'\nimport SocketIoHelper from 'socketio'\n\nimport { store } from 'react-notifications-component'\nimport base from 'notifications'\n\nconst CardVideo = ({ dest, value, reloadStatus }) => {\n  const [collapse, setCollapse] = useState(false)\n  const inputVideo = useRef({ dest: dest, type: '7', value: value, name: '' })\n\n  // TODO: risolvere bug grafico dello switch\n  // useEffect(() => {\n  //   inputVideo.current.value = value\n  // }, [value])\n\n  const toggleCollapse = useCallback(() => {\n    setCollapse(!collapse)\n  }, [collapse])\n\n  const handleSwitch = useCallback(() => {\n    inputVideo.current.value = !inputVideo.current.value\n  }, [inputVideo])\n\n  const handleText = useCallback(\n    event => {\n      let name = event.target.value\n      if (event.target.validity.valid) {\n        inputVideo.current.name = name\n      }\n    },\n    [inputVideo]\n  )\n\n  const sendVideo = useCallback(() => {\n    SocketIoHelper.sendVideo(inputVideo.current)\n    store.addNotification({\n      title: 'Video',\n      message: 'Invio del pacchetto video alla bici',\n      ...base,\n    })\n\n    reloadStatus()\n    // eslint-disable-next-line\n  }, [inputVideo])\n\n  return (\n    <Card>\n      <CardHeader>\n        <Button\n          block\n          color=\"link\"\n          className=\"text-left m-0 p-0\"\n          onClick={toggleCollapse}\n          aria-expanded={collapse}\n        >\n          <strong>Video</strong>\n        </Button>\n      </CardHeader>\n      <Collapse isOpen={!collapse}>\n        <CardBody>\n          <Form\n            action=\"\"\n            encType=\"multipart/form-data\"\n            className=\"form-horizontal\"\n          >\n            <FormGroup row>\n              <Col md=\"9\">\n                <Label>Registrazione</Label>\n              </Col>\n              <Col md=\"3\">\n                <AppSwitch\n                  className={'mx-1'}\n                  variant={'pill'}\n                  color={'primary'}\n                  outline={'alt'}\n                  label\n                  checked={value}\n                  onChange={handleSwitch.bind(this)}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Col md=\"5\">\n                <Label>File</Label>\n              </Col>\n              <Col md=\"7\">\n                <Input\n                  className=\"text-center\"\n                  type=\"text\"\n                  pattern=\"*\"\n                  placeholder=\"Inserire nome del file video\"\n                  onChange={handleText}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n        </CardBody>\n        <CardFooter>\n          <Row>\n            <Col md=\"9\">\n              <Button\n                type=\"submit\"\n                data-dismiss=\"alert\"\n                size=\"sl\"\n                color=\"primary\"\n                onClick={sendVideo}\n              >\n                <i className=\"fa fa-sign-out\"></i> Send\n              </Button>\n              &ensp;\n            </Col>\n          </Row>\n        </CardFooter>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardVideo\n","import React, { useCallback, useState, useRef } from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Collapse,\n} from 'reactstrap'\nimport SocketIoHelper from 'socketio'\nimport { store } from 'react-notifications-component'\nimport base from 'notifications'\n\nconst CardRasp = ({ dest, reloadStatus }) => {\n  const [collapse, setCollapse] = useState(false)\n  const inputRasp = useRef({ dest: dest, type: '6', value: '' })\n\n  const toggleCollapse = useCallback(() => {\n    setCollapse(!collapse)\n  }, [collapse])\n\n  const sendRasp = useCallback(\n    value => {\n      inputRasp.current.value = value\n      SocketIoHelper.sendRasp(inputRasp.current)\n\n      store.addNotification({\n        title: 'Raspberry',\n        message: 'Invio del pacchetto raspberry alla bici',\n        ...base,\n      })\n\n      reloadStatus()\n    },\n    // eslint-disable-next-line\n    [inputRasp]\n  )\n\n  return (\n    <Card>\n      <CardHeader>\n        <Button\n          block\n          color=\"link\"\n          className=\"text-left m-0 p-0\"\n          onClick={toggleCollapse}\n          aria-expanded={collapse}\n        >\n          <strong>Raspberry</strong>\n        </Button>\n      </CardHeader>\n      <Collapse isOpen={!collapse}>\n        <CardBody>\n          <Row>\n            <Col xs=\"7\" md=\"8\" xl=\"9\">\n              <Button\n                type=\"submit\"\n                data-dismiss=\"alert\"\n                size=\"sl\"\n                color=\"danger\"\n                onClick={() => sendRasp('0')}\n              >\n                <i className=\"fa fa-power-off\"></i> Spegni\n              </Button>\n            </Col>\n            <Col xs=\"5\" md=\"4\" xl=\"3\">\n              <Button\n                className=\"text-white\"\n                type=\"submit\"\n                data-dismiss=\"alert\"\n                size=\"sl\"\n                color=\"warning\"\n                onClick={() => sendRasp('1')}\n              >\n                <i className=\"fa fa-refresh\"></i> Riavvia\n              </Button>\n            </Col>\n          </Row>\n        </CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardRasp\n","import React, { useRef, useState, useCallback, useEffect } from 'react'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Collapse,\n} from 'reactstrap'\nimport { AppSwitch } from '@coreui/react'\n\nimport SocketIoHelper from 'socketio'\nimport { store } from 'react-notifications-component'\nimport base from 'notifications'\n\nconst currentTime = () => {\n  const d = new Date()\n  return (\n    d.toLocaleTimeString() +\n    '_' +\n    d.toLocaleDateString('it-IT', {\n      month: '2-digit',\n      day: '2-digit',\n    })\n  ).replace('/', '-')\n}\n\nconst CardSettings = ({ settings, reloadStatus }) => {\n  const [collapse, setCollapse] = useState(false)\n  const inputSettings = useRef(settings)\n\n  useEffect(() => {\n    inputSettings.current = settings\n  }, [settings])\n\n  const toggleCollapse = useCallback(() => {\n    setCollapse(!collapse)\n  }, [collapse])\n\n  const handleSwitch = useCallback(\n    name => {\n      let settings = inputSettings.current\n      let value = !settings[name]\n      settings[name] = value\n    },\n    [inputSettings]\n  )\n\n  const handleText = useCallback(\n    (name, event) => {\n      let settings = inputSettings.current\n      let value = event.target.value\n\n      if (event.target.validity.valid) {\n        settings[name] = value\n      }\n    },\n    [inputSettings]\n  )\n\n  const saveSettings = useCallback(() => {\n    let settings = inputSettings.current\n\n    settings.update = currentTime()\n    SocketIoHelper.saveSettings(settings)\n\n    store.addNotification({\n      title: 'Settings',\n      message: 'Invio del pacchetto settings alla bici',\n      ...base,\n    })\n\n    reloadStatus()\n    // eslint-disable-next-line\n  }, [inputSettings])\n\n  return (\n    <Card>\n      <CardHeader>\n        <Button\n          block\n          color=\"link\"\n          className=\"text-left m-0 p-0\"\n          onClick={toggleCollapse}\n          aria-expanded={collapse}\n        >\n          <strong>Impostazioni</strong>\n        </Button>\n      </CardHeader>\n      <Collapse isOpen={!collapse}>\n        <CardBody>\n          <Form\n            action=\"\"\n            encType=\"multipart/form-data\"\n            className=\"form-horizontal\"\n          >\n            <FormGroup row>\n              <Col md=\"9\">\n                <Label>Log</Label>\n              </Col>\n              <Col md=\"3\">\n                <AppSwitch\n                  className={'mx-1'}\n                  variant={'pill'}\n                  color={'primary'}\n                  outline={'alt'}\n                  label\n                  onChange={handleSwitch.bind(this, 'log')}\n                  checked={inputSettings.current.log}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Col md=\"9\">\n                <Label>Csv</Label>\n              </Col>\n              <Col md=\"3\">\n                <AppSwitch\n                  className={'mx-1'}\n                  variant={'pill'}\n                  color={'primary'}\n                  outline={'alt'}\n                  label\n                  onChange={handleSwitch.bind(this, 'csv')}\n                  checked={inputSettings.current.csv}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Col md=\"9\">\n                <Label>Ant</Label>\n              </Col>\n              <Col md=\"3\">\n                <AppSwitch\n                  className={'mx-1'}\n                  variant={'pill'}\n                  color={'primary'}\n                  outline={'alt'}\n                  label\n                  onChange={handleSwitch.bind(this, 'ant')}\n                  checked={inputSettings.current.ant}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Col md=\"9\">\n                <Label>Potenza media</Label>\n              </Col>\n              <Col md=\"3\">\n                <Input\n                  className=\"text-center\"\n                  type=\"number\"\n                  min=\"0\"\n                  pattern=\"\"\n                  defaultValue={settings.potenza}\n                  onChange={handleText.bind(this, 'potenza')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Col md=\"9\">\n                <Label>Led Mode</Label>\n              </Col>\n              <Col md=\"3\">\n                <Input\n                  className=\"text-center\"\n                  type=\"number\"\n                  min=\"0\"\n                  pattern=\"[0-9]*\"\n                  defaultValue={inputSettings.current.led}\n                  onChange={handleText.bind(this, 'led')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Col md=\"9\">\n                <Label>Circonferenza</Label>\n              </Col>\n              <Col md=\"3\">\n                <Input\n                  className=\"text-center\"\n                  type=\"number\"\n                  min=\"0\"\n                  pattern=\"[0-9]*\"\n                  defaultValue={inputSettings.current.circonferenza}\n                  onChange={handleText.bind(this, 'circonferenza')}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Col md=\"9\">\n                <Label>Valore calibrazione</Label>\n              </Col>\n              <Col md=\"3\">\n                <Input\n                  className=\"text-center\"\n                  type=\"number\"\n                  min=\"0\"\n                  pattern=\"[0-9]*\"\n                  defaultValue={inputSettings.current.calibration_value}\n                  onInput={handleText.bind(this, 'calibration_value')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Col md=\"9\">\n                <Label>Run</Label>\n              </Col>\n              <Col md=\"3\">\n                <Input\n                  className=\"text-center\"\n                  type=\"number\"\n                  min=\"0\"\n                  pattern=\"[0-9]*\"\n                  defaultValue={inputSettings.current.run}\n                  onInput={handleText.bind(this, 'run')}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n        </CardBody>\n\n        <CardFooter>\n          <Row>\n            <Col xs=\"6\" md=\"9\">\n              <Button\n                type=\"submit\"\n                data-dismiss=\"alert\"\n                size=\"sl\"\n                color=\"success\"\n                onClick={saveSettings}\n              >\n                <i className=\"fa fa-download\"></i> Save\n              </Button>\n              &ensp;\n            </Col>\n            <Col xs=\"6\" md=\"3\">\n              <div className=\"text-center\">\n                {settings.update.replace('_', '\\n')}\n              </div>\n            </Col>\n          </Row>\n        </CardFooter>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSettings\n","import React, { useCallback, useState, useEffect } from 'react'\nimport { Col, Row } from 'reactstrap'\nimport SocketIoHelper from 'socketio'\nimport { CardState, CardVideo, CardRasp, CardSettings } from './Cards'\n\nconst Bike = () => {\n  const [state, setState] = useState()\n  const [settings, setSettings] = useState()\n  const loading = state === undefined || settings === undefined\n\n  useEffect(() => {\n    reloadStatus()\n    // eslint-disable-next-line\n  }, [])\n\n  const reloadStatus = useCallback(() => {\n    SocketIoHelper.getSettings(newSettings => {\n      if (JSON.stringify(newSettings) !== JSON.stringify(settings)) {\n        setSettings(newSettings)\n      }\n    })\n    SocketIoHelper.getState(state => setState(state))\n    // eslint-disable-next-line\n  }, [])\n\n  const updateView = useCallback(() => {\n    reloadStatus()\n  }, [reloadStatus])\n\n  // NOTE: probabilmente da deprecare\n  const Loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  )\n\n  return loading ? (\n    Loading\n  ) : (\n    <article>\n      <Row>\n        <Col xs=\"12\" xl=\"4\">\n          <CardState\n            settings={settings}\n            state={state}\n            reloadStatus={updateView}\n          />\n        </Col>\n\n        <Col xs=\"12\" xl=\"4\">\n          <CardVideo\n            value={state.video_recording}\n            dest={state.dest}\n            reloadStatus={updateView}\n          />\n          <CardRasp dest={state.dest} reloadStatus={updateView} />\n        </Col>\n\n        <Col xs=\"12\" xl=\"4\">\n          <CardSettings settings={settings} reloadStatus={updateView} />\n        </Col>\n      </Row>\n    </article>\n  )\n}\n\nexport default Bike\n"],"sourceRoot":""}