{"version":3,"sources":["notifications/notification.js","views/Bike/Bike.js"],"names":["base","type","insert","container","animationIn","animationOut","width","dismiss","duration","onScreen","pauseOnHover","showIcon","Bike","props","_isMounted","updateView","reloadStatus","loading","className","state","settings","visible","visible_video","visible_rasp","this","SocketIoHelper","getSettings","JSON","stringify","setState","getState","Row","Col","xs","xl","value","video_recording","dest","Component","CardVideo","handleSwitch","inputVideo","handleText","event","name","target","validity","valid","toggle","collapse","sendVideo","store","addNotification","title","message","Card","CardHeader","Button","block","color","onClick","aria-expanded","Collapse","isOpen","CardBody","Form","action","encType","FormGroup","row","md","Label","variant","outline","label","checked","onChange","Input","pattern","placeholder","CardFooter","data-dismiss","size","CardSetting","inputSettings","saveSettings","update","today","Date","date","getDate","getMonth","slice","getHours","getMinutes","getSeconds","currentTime","parse","bind","log","csv","ant","min","defaultValue","potenza","led","circonferenza","calibration_value","onInput","run","replace","CardState","toggleButton","status","updateStatus","jstate","jsettings","CardRasp","sendRasp","inputRasp"],"mappings":"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","file":"static/js/45.29093199.chunk.js","sourcesContent":["import \"react-notifications-component/dist/theme.css\"\nimport \"animate.css\"\n\n// Notifiche\nconst base = {\n    type: \"info\",\n    insert: \"top\",\n    container: \"top-right\",\n    animationIn: [\"animated\", \"fadeIn\"],\n    animationOut: [\"animated\", \"fadeOut\"],\n    width: 300,\n    dismiss: {\n        duration: 2500,\n        onScreen: true,  // true: mostra il countdown di scomparsa\n        pauseOnHover: true,\n        showIcon: true\n    }\n}\n\nexport default base;\n","import React, {\n  Component\n} from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Collapse,\n} from \"reactstrap\";\nimport {\n  AppSwitch\n} from '@coreui/react'\nimport SocketIoHelper from \"../../helpers/socketHelper\";\nimport { store } from 'react-notifications-component';\nimport base from '../../notifications/notification';\n\nfunction currentTime() {\n  var today = new Date();\n  var date = today.getDate() + '-' + (\"0\" + (today.getMonth() + 1)).slice(-2);\n  var time = (\"0\" + (today.getHours() + 1)).slice(-2) + \":\" + (\"0\" + (today.getMinutes() + 1)).slice(-2) + \":\" + (\"0\" + (today.getSeconds() + 1)).slice(-2);\n  var dateTime = time + '_' + date;\n\n  return dateTime\n}\n\nclass Bike extends Component {\n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: \"\",\n      state: \"\",\n      visible: false,\n      visible_video: false,\n      visible_rasp: false,\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.reloadStatus();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  reloadStatus() {\n    SocketIoHelper.getSettings(settings => {\n      if (JSON.stringify(this.state.settings) !== JSON.stringify(settings)) {\n        this.setState({ settings });\n      }\n    });\n    SocketIoHelper.getState(state => {\n      this.setState({ state })\n    });\n  }\n\n  updateView = () => {\n    this.reloadStatus();\n  }\n\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  );\n\n  render() {\n    if (this.state.state === \"\" || this.state.settings === \"\") {\n      return null\n    }\n    return (\n      <div className=\"animated fadeIn\" >\n        <Row>\n          <Col xs=\"12\" xl=\"4\">\n            <CardState\n              settings={this.state.settings}\n              state={this.state.state}\n              reloadStatus={this.updateView}\n            />\n          </Col>\n\n          <Col xs=\"12\" xl=\"4\">\n            <CardVideo\n              value={this.state.state.video_recording}\n              dest={this.state.state.dest}\n              reloadStatus={this.updateView}\n            />\n            <CardRasp\n              dest={this.state.state.dest}\n              reloadStatus={this.updateView}\n            />\n          </Col>\n\n          <Col xs=\"12\" xl=\"4\">\n            <CardSetting\n              settings={this.state.settings}\n              reloadStatus={this.updateView}\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nclass CardVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapse: false\n    }\n\n    this.inputVideo = {\n      \"dest\": this.props.dest,\n      \"type\": \"7\",\n      \"value\": this.props.value,\n      \"name\": \"\"\n    }\n  }\n\n  handleSwitch = () => {\n    this.inputVideo.value = !this.inputVideo.value;\n  };\n\n  handleText = (event) => {\n    const name = event.target.value;\n    if (event.target.validity.valid) {\n      this.inputVideo.name = name;\n    }\n  };\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  sendVideo = () => {\n    store.addNotification({\n      title: \"Video\",\n      message: \"Invio del pacchetto video alla bici\",\n      ...base,\n    });\n    SocketIoHelper.sendVideo(this.inputVideo);\n    this.props.reloadStatus();\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Video</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <Form action=\"\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Registrazione</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    checked={this.props.value}\n                    onChange={this.handleSwitch}\n                  />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"5\">\n                  <Label>File</Label>\n                </Col>\n                <Col md=\"7\">\n                  <Input className=\"text-center\" type=\"text\" pattern=\"*\"\n                    placeholder=\"Inserire nome del file video\"\n                    onChange={this.handleText} />\n                </Col>\n              </FormGroup>\n            </Form>\n          </CardBody>\n          <CardFooter>\n            <Row>\n              <Col md=\"9\">\n                <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"primary\" onClick={this.sendVideo}><i className=\"fa fa-sign-out\"></i> Send</Button>\n                &ensp;\n            </Col>\n            </Row>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nclass CardSetting extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapse: false\n    }\n\n    this.inputSettings = JSON.parse(JSON.stringify(this.props.settings));;\n  }\n\n  handleSwitch = name => {\n    const settings = this.inputSettings;\n    const value = !settings[name];\n    settings[name] = value;\n  };\n\n  handleText = (name, event) => {\n    const settings = this.inputSettings;\n    const value = event.target.value;\n\n    if (event.target.validity.valid) {\n      settings[name] = value;\n    }\n  };\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  saveSettings = () => {\n    store.addNotification({\n      title: \"Settings\",\n      message: \"Invio del pacchetto settings alla bici\",\n      ...base,\n    });\n    this.inputSettings.update = currentTime()\n    SocketIoHelper.saveSettings(this.inputSettings);\n    this.props.reloadStatus();\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Impostazioni</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <Form action=\"\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Log</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    onChange={this.handleSwitch.bind(this, 'log')}\n                    checked={this.props.settings.log} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Csv</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    onChange={this.handleSwitch.bind(this, 'csv')}\n                    checked={this.props.settings.csv} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Ant</Label>\n                </Col>\n                <Col md=\"3\">\n                  <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                    onChange={this.handleSwitch.bind(this, 'ant')}\n                    checked={this.props.settings.ant} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Potenza media</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"\"\n                    defaultValue={this.props.settings.potenza}\n                    onChange={this.handleText.bind(this, 'potenza')} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Led Mode</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.led}\n                    onChange={this.handleText.bind(this, 'led')} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Circonferenza</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.circonferenza}\n                    onChange={this.handleText.bind(this, 'circonferenza')} />\n                </Col>\n              </FormGroup>\n\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Valore calibrazione</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.calibration_value}\n                    onInput={this.handleText.bind(this, 'calibration_value')} />\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Col md=\"9\">\n                  <Label>Run</Label>\n                </Col>\n                <Col md=\"3\">\n                  <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                    defaultValue={this.props.settings.run}\n                    onInput={this.handleText.bind(this, 'run')} />\n                </Col>\n              </FormGroup>\n            </Form>\n          </CardBody>\n\n          <CardFooter>\n            <Row>\n              <Col xs=\"6\" md=\"9\">\n                <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"success\" onClick={this.saveSettings}><i className=\"fa fa-download\"></i> Save</Button>\n                &ensp;\n                  </Col>\n              <Col xs=\"6\" md=\"3\">\n                <div className=\"text-center\">{this.props.settings.update.replace(\"_\", \"\\n\")}</div>\n              </Col>\n            </Row>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nclass CardState extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: \"\",\n      collapse: false,\n    };\n  }\n\n  // TODO: issue #22\n  UNSAFE_componentWillReceiveProps() {\n    this.updateStatus();\n  }\n\n  componentDidMount() {\n    this.updateStatus();\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  toggleButton = () => {\n    store.addNotification({\n      ...base,\n      title: \"State\",\n      message: \"Aggiornato lo status\",\n      type: \"success\"\n    });\n    this.props.reloadStatus()\n  };\n\n  updateStatus() {\n    let jstate = JSON.parse(JSON.stringify(this.props.state));\n    let jsettings = JSON.parse(JSON.stringify(this.props.settings));\n\n    // rimuovo i campi superflui dall'output\n    delete jstate[\"dest\"];\n    delete jstate[\"type\"];\n    delete jsettings[\"dest\"];\n    delete jsettings[\"type\"];\n\n    let state = JSON.stringify(jstate, null, 1).replace(/\\{|\\}|\"|,|/g, \"\").replace(\"\\n\", \"\");\n    let settings = JSON.stringify(jsettings, null, 1).replace(/\\{|\\}|\"|,/g, \"\");\n\n    this.setState({\n      status: state + settings\n    });\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Status</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody >\n            <pre>\n              <code>\n                {this.state.status}\n              </code>\n            </pre>\n          </CardBody>\n          <CardFooter>\n            <Button className=\"text-white bg-cyan\" type=\"submit\" size=\"sl\" onClick={this.toggleButton}><i className=\"fa fa-refresh\"></i> Reload</Button>\n          </CardFooter>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nclass CardRasp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapse: false\n    };\n\n    this.inputRasp = {\n      dest: this.props.dest,\n      type: \"6\",\n      value: \"\"\n    }\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  sendRasp = value => {\n    store.addNotification({\n      title: \"Raspberry\",\n      message: \"Invio del pacchetto raspberry alla bici\",\n      ...base,\n    });\n    this.inputRasp.value = value;\n    SocketIoHelper.sendRasp(this.inputRasp);\n    this.props.reloadStatus();\n  }\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Raspberry</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody>\n            <Row>\n              <Col xs=\"7\" md=\"8\" xl=\"9\">\n                <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"danger\" onClick={this.sendRasp.bind(this, '0')}>\n                  <i className=\"fa fa-power-off\"></i> Spegni\n              </Button>\n              </Col>\n              <Col xs=\"5\" md=\"4\" xl=\"3\">\n                <Button className=\"text-white\" type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"warning\" onClick={this.sendRasp.bind(this, '1')}>\n                  <i className=\"fa fa-refresh\"></i> Riavvia\n              </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Collapse>\n      </Card>\n    );\n  }\n}\n\nexport default Bike;\n\n\n\n// NOTE: Il cambio va bene con l'app bluetooth android\n// class CardGear extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       calibration: \"\",\n//       collapse: false\n//     }\n\n//     this.inputCalibration = undefined;\n//   }\n\n//   toggle = () => {\n//     this.setState({ collapse: !this.state.collapse });\n//   };\n\n//   sendCalibration = () => {\n//     SocketIoHelper.sendCalibration(this.inputCalibration);\n//     this.props.sendCalibration();\n//   };\n\n//   render() {\n//     return (\n//       <Card>\n//         <CardHeader>\n//           <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n//             <strong>Cambio</strong>\n//           </Button>\n//         </CardHeader>\n//         <Collapse isOpen={!this.state.collapse}>\n//           <CardBody>\n//             robe\n//           </CardBody>\n//           <CardFooter>\n//             <Row>\n//               <Col md=\"9\">\n//                 <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"primary\" onClick={this.sendCalibration}><i className=\"fa fa-sign-out\"></i> Send</Button>\n//                 &ensp;\n//               </Col>\n//             </Row>\n//           </CardFooter>\n//         </Collapse>\n//       </Card>\n//     );\n//   }\n// }\n"],"sourceRoot":""}