{"version":3,"sources":["views/Bike/Bike.js"],"names":["Bike","props","_this","Object","_home_gabriele_Documenti_marta_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_gabriele_Documenti_marta_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_gabriele_Documenti_marta_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","_isMounted","inputSettings","undefined","saveSettings","update","today","Date","date","getDate","getMonth","getHours","getMinutes","getSeconds","currentTime","SocketIoHelper","showMessage","reloadStatus","toggleButton","onDismiss","setState","visible","setTimeout","handleSwitch","name","settings","value","handleText","event","target","validity","valid","loading","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","state","_this2","getSettings","getState","JSON","parse","stringify","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","xs","xl","CardState","reactstrap__WEBPACK_IMPORTED_MODULE_8__","color","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","action","encType","reactstrap__WEBPACK_IMPORTED_MODULE_13__","row","md","reactstrap__WEBPACK_IMPORTED_MODULE_14__","_coreui_react__WEBPACK_IMPORTED_MODULE_19__","variant","outline","label","onChange","bind","defaultChecked","log","checked","csv","ant","reactstrap__WEBPACK_IMPORTED_MODULE_15__","type","min","pattern","defaultValue","potenza","led","circonferenza","calibration_value","onInput","run","video_record","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","data-dismiss","size","onClick","Component","_this3","collapse","status","updateStatus","jstate","jsettings","replace","block","aria-expanded","reactstrap__WEBPACK_IMPORTED_MODULE_18__"],"mappings":"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","file":"static/js/43.814750c8.chunk.js","sourcesContent":["import React, {\n  Component\n} from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Alert,\n  Collapse,\n} from \"reactstrap\";\nimport {\n  AppSwitch\n} from '@coreui/react'\nimport SocketIoHelper from \"../../helpers/socketHelper\";\n\n\nclass Bike extends Component {\n  _isMounted = false;\n  inputSettings = undefined;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: \"\",\n      state: \"\",\n      visible: false,\n    };\n\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.reloadStatus();\n\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  reloadStatus() {\n    SocketIoHelper.getSettings(settings =>\n      this.setState({ settings })\n    )\n    SocketIoHelper.getState(state =>\n      this.setState({ state })\n    );\n  }\n\n  saveSettings = () => {\n    this.inputSettings.update = currentTime()\n    SocketIoHelper.saveSettings(this.inputSettings);\n    this.showMessage();\n    this.reloadStatus();\n  };\n\n  toggleButton = () => {\n    this.reloadStatus();\n  }\n\n  // funzioni per l'allert a schermo\n  onDismiss = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  showMessage = () => {\n    this.setState({\n      visible: true\n    })\n    setTimeout(this.onDismiss, 2500);\n  };\n\n  // funzioni per gli input\n  handleSwitch = name => {\n    const settings = this.inputSettings;\n    const value = !settings[name];\n\n    settings[name] = value;\n  };\n\n  handleText = (name, event) => {\n    const settings = this.inputSettings;\n    const value = event.target.value;\n\n    if (event.target.validity.valid) {\n      settings[name] = value;\n    }\n  };\n\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  );\n\n  render() {\n    if (this.state.state === \"\") {\n      return null;\n    }\n    if (this.inputSettings === undefined) {\n      this.inputSettings = JSON.parse(JSON.stringify(this.state.settings));\n    }\n    return (\n      <div className=\"animated fadeIn\" >\n        <Row>\n          <Col xs=\"12\" xl=\"6\">\n            <CardState\n              settings={this.state.settings}\n              state={this.state.state}\n              toggleButton={this.toggleButton}\n            />\n\n            <Alert color=\"warning\" isOpen={this.state.visible} toggle={this.onDismiss}>\n              Impostazioni salvate\n            </Alert>\n          </Col>\n\n          <Col xs=\"12\" xl=\"6\">\n            <Card>\n              <CardHeader>\n                <strong>Impostazioni</strong>\n              </CardHeader>\n              <CardBody>\n                <Form action=\"\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n                  <FormGroup row>\n                    <Col md=\"10\">\n                      <Label>Log</Label>\n                    </Col>\n                    <Col md=\"2\">\n                      <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                        onChange={this.handleSwitch.bind(this, 'log')}\n                        defaultChecked={this.state.settings.log} />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col md=\"10\">\n                      <Label>Csv</Label>\n                    </Col>\n                    <Col md=\"2\">\n                      <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                        onChange={this.handleSwitch.bind(this, 'csv')}\n                        checked={this.state.settings.csv} />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col md=\"10\">\n                      <Label>Ant</Label>\n                    </Col>\n                    <Col md=\"2\">\n                      <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                        onChange={this.handleSwitch.bind(this, 'ant')}\n                        defaultChecked={this.state.settings.ant} />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col md=\"9\">\n                      <Label>Potenza media</Label>\n                    </Col>\n                    <Col md=\"3\">\n                      <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                        defaultValue={this.state.settings.potenza}\n                        onChange={this.handleText.bind(this, 'potenza')} />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col md=\"9\">\n                      <Label>Led Mode</Label>\n                    </Col>\n                    <Col md=\"3\">\n                      <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                        defaultValue={this.state.settings.led}\n                        onChange={this.handleText.bind(this, 'led')} />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col md=\"9\">\n                      <Label>Circonferenza</Label>\n                    </Col>\n                    <Col md=\"3\">\n                      <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                        defaultValue={this.state.settings.circonferenza}\n                        onChange={this.handleText.bind(this, 'circonferenza')} />\n                    </Col>\n                  </FormGroup>\n\n                  <FormGroup row>\n                    <Col md=\"9\">\n                      <Label>Valore calibrazione</Label>\n                    </Col>\n                    <Col md=\"3\">\n                      <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                        defaultValue={this.state.settings.calibration_value}\n                        onInput={this.handleText.bind(this, 'calibration_value')} />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col md=\"9\">\n                      <Label>Run</Label>\n                    </Col>\n                    <Col md=\"3\">\n                      <Input className=\"text-center\" type=\"number\" min=\"0\" pattern=\"[0-9]*\"\n                        defaultValue={this.state.settings.run}\n                        onInput={this.handleText.bind(this, 'run')} />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup row>\n                    <Col md=\"10\">\n                      <Label>Record video</Label>\n                    </Col>\n                    <Col md=\"2\">\n                      <AppSwitch className={'mx-1'} variant={'pill'} color={'primary'} outline={'alt'} label\n                        onChange={this.handleSwitch.bind(this, 'video_record')}\n                        defaultChecked={this.state.settings.video_record}\n                      />\n                    </Col>\n                  </FormGroup>\n                </Form>\n              </CardBody>\n\n              <CardFooter>\n                <Row>\n                  <Col md=\"9\">\n                    <Button type=\"submit\" data-dismiss='alert' size=\"sl\" color=\"success\" onClick={this.saveSettings}><i className=\"fa fa-download\"></i> Save</Button>\n                    &ensp;\n                  </Col>\n                  <Col md=\"3\">\n                    <div className=\"text-center\">{this.state.settings.update}</div>\n                  </Col>\n                </Row>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n\n    );\n  }\n}\n\nclass CardState extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      status: \"\",\n      collapse: false,\n    };\n  }\n\n  componentWillReceiveProps() {\n    this.updateStatus();\n  }\n\n  componentDidMount() {\n    this.updateStatus();\n  }\n\n  toggle = () => {\n    this.setState({ collapse: !this.state.collapse });\n  };\n\n  updateStatus() {\n    let jstate = JSON.parse(JSON.stringify(this.props.state));\n    let jsettings = JSON.parse(JSON.stringify(this.props.settings));\n\n    // rimuovo i campi superflui dall'output\n    delete jstate[\"dest\"];\n    delete jstate[\"type\"];\n    delete jsettings[\"dest\"];\n    delete jsettings[\"type\"];\n\n    let state = JSON.stringify(jstate, null, 1).replace(/\\{|\\}|\"|,|/g, \"\").replace(\"\\n\", \"\");\n    let settings = JSON.stringify(jsettings, null, 1).replace(/\\{|\\}|\"|,/g, \"\");\n\n    this.setState({\n      status: state + settings\n    });\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={this.toggle} aria-expanded={this.state.collapse} >\n            <strong>Status</strong>\n          </Button>\n        </CardHeader>\n        <Collapse isOpen={!this.state.collapse}>\n          <CardBody >\n            <pre>\n              <code>\n                {this.state.status}\n              </code>\n            </pre>\n          </CardBody>\n        </Collapse>\n        <CardFooter>\n          <Button type=\"submit\" size=\"sl\" color=\"danger\" onClick={this.props.toggleButton}><i className=\"fa fa-refresh\"></i> Reload</Button>\n        </CardFooter>\n\n      </Card>\n    )\n  }\n}\n\nfunction currentTime() {\n  var today = new Date();\n\n  var date = today.getDate() + '/' + (today.getMonth() + 1);\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  var dateTime = time + '-' + date;\n\n  return dateTime\n}\n\nexport default Bike;"],"sourceRoot":""}